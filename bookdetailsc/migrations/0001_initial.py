# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-02-15 21:43
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=50)),
                ('lastName', models.CharField(blank=True, max_length=50)),
                ('popularity', models.CharField(blank=True, max_length=10)),
                ('contact', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('isbn', models.CharField(max_length=20)),
                ('slug', models.SlugField(help_text='Unqie value for product page URL,created from name', max_length=255)),
                ('sku', models.CharField(max_length=50)),
                ('inStock', models.BooleanField(default=True)),
                ('bookDescription', models.TextField(help_text='Overview of the Book', max_length=500)),
                ('language', models.CharField(choices=[('Urdu', 'Urdu'), ('English', 'English'), ('Punjabi', 'Punjabi'), ('Pashto', 'Pashto'), ('Arabic', 'Arabic'), ('Sindhi', 'Sindhi')], max_length=50)),
                ('metaKeywords', models.CharField(help_text='Comma-delimited set of SEO keywords for meta tag', max_length=255, verbose_name='Meta Keywords')),
                ('metaDescription', models.CharField(help_text='Content for desciption meta tag', max_length=255, verbose_name='Meta Description ')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('thumbnailImage', models.FileField(blank=True, upload_to='images/book/thumbnail')),
                ('coverImage', models.FileField(upload_to='images/book/cover')),
                ('preview', models.FileField(blank=True, upload_to='bookPreview')),
                ('author', models.ManyToManyField(to='bookdetailsc.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(help_text='Unqiue value for product page URL, created from name.', unique=True)),
                ('description', models.TextField()),
                ('isActive', models.BooleanField(default=True)),
                ('metaKeywords', models.CharField(help_text='Comma-delimited set of SEO keywords for meta tag', max_length=255, verbose_name='Meta Keywords')),
                ('metaDescription', models.CharField(help_text='Content for desciption meta tag', max_length=255, verbose_name='Meta Description ')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('thumbnailImage', models.FileField(upload_to='static/bookdetailsc/soimages/category/thumbnails')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='bookdetailsc.Category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'categories',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='CondFormPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookFormat', models.CharField(choices=[('HardCover', 'HardCover'), ('PaperBack', 'PaperBack')], max_length=20)),
                ('bookCondition', models.CharField(choices=[('New', 'New'), ('Old', 'Old')], max_length=20)),
                ('purchasePrice', models.CharField(max_length=5)),
                ('sellingPrice', models.CharField(max_length=5)),
                ('dimension', models.CharField(blank=True, max_length=10)),
                ('weight', models.CharField(blank=True, max_length=10)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookdetailsc.Book')),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(blank=True, max_length=50)),
                ('contact', models.CharField(blank=True, max_length=50)),
                ('dealTerms', models.CharField(blank=True, max_length=50)),
                ('otherInformation', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookdetailsc.Category'),
        ),
        migrations.AddField(
            model_name='book',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookdetailsc.Publisher'),
        ),
    ]
